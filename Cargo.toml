[package]
name = "languagetool-code-comments"
version = "0.1.0"
edition = "2021"
rust-version = "1.63.0"

# TODO install dprint, get formatting working for toml.

[dependencies]
anyhow = "1.0.52"
async-std = { version = "1.12.0", features = ["tokio1"] }
clap = "3.2.17"
clap_complete = "3.2.3"
dirs = "4.0.0"
fstrings = "0.2.3"
futures = {version = "0.3.23", features = ["std"]}
languagetool-rust = "1.2.0"
serde = { version = "1.0.143", features = ["derive"] }
serde_json = "1.0.83"
# TODO reduce these features.
tokio = { version = "1.15.0", features = ["io-std", "io-util", "macros", "net", "process", "rt", "signal", "time"] }
tree-sitter = "0.20.8"
xxhash-rust = {version = "0.8.5", features = ["xxh3"]}

[dev-dependencies]
cargo-nextest = "0.9.35"
cargo-llvm-cov = "0.4.14"
cross = "0.2.4"

[build-dependencies]
cc = {version = "1.0.73", features = ["parallel"] }
vergen = { version = "7.4.0", features = ["git"] }

[package.metadata.commands]
lint = '''set -e
  cargo fmt --check
  cargo clippy
  cargo check
  # cargo bin dprint check
'''
lint-fix = '''set -e
  cargo clippy --fix --allow-dirty
  cargo fix --allow-dirty
  # Run twice as for some reason not all formatting is applied on the first try.
  cargo fmt
  cargo fmt
  # cargo bin dprint fmt
'''
# TODO update version.
goreleaser = '''set -e
  mkdir -p .bin
  rm -f .bin/goreleaser
  curl -L https://github.com/goreleaser/goreleaser/releases/download/v1.3.1/goreleaser_Darwin_x86_64.tar.gz | tar xz - -C .bin goreleaser
  .bin/goreleaser --rm-dist
'''
release = '''set -e
  cargo build

  export LTCC_VERSION=$(cat Cargo.toml | grep version | head -n1 | awk -F '"' '{print $2}')
  git add .
  git commit -m "v$LTCC_VERSION"
  git tag -a "v$LTCC_VERSION" -m "v$LTCC_VERSION"

  # cargo cmd build-darwin-x64
  # cargo cmd build-linux-x64

  git push
  git push --tags
  cargo cmd goreleaser
'''

# TODO possibly change nightly version to something that works with 1.63.0
setup-nightly = '''
  export LTCC_NIGHTLY=nightly-2022-01-26
  rustup toolchain install "$LTCC_NIGHTLY" --component llvm-tools-preview --force
  rustup toolchain link ltcc-nightly "$(rustup toolchain list -v | grep $LTCC_NIGHTLY | grep '^nightly-' | awk '{print $2}')"
'''
test = '''
  cargo bin cargo-nextest run
'''
test-coverage = '''
  cargo cmd setup-nightly
  cargo +ltcc-nightly bin cargo-llvm-cov --ignore-filename-regex='_test.rs'
'''
test-coverage-html = '''
  cargo cmd setup-nightly
  cargo +ltcc-nightly bin cargo-llvm-cov --open --ignore-filename-regex='_test.rs'
'''
test-coverage-lcov = '''
  cargo cmd setup-nightly
  rm -f lcov.info
  cargo +ltcc-nightly bin cargo-llvm-cov --lcov --output-path lcov.info --ignore-filename-regex='_test.rs'
'''
test-coverage-ci = '''
  cargo cmd setup-nightly
  cargo +ltcc-nightly bin cargo-llvm-cov --html --output-dir ./coverage --ignore-filename-regex='_test.rs'
'''

